[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 1.8.0_421)
[debug] Load.defaultLoad until apply took 212.0878ms
[debug]           Load.loadUnit: plugins took 192.6914ms
[debug]           Load.loadUnit: defsScala took 0.7064ms
[debug] [Loading] Scanning directory D:\ScalaAirflowPro\airflow\jobs\BigDataProjDeltaScala\project
[debug]             Load.loadUnit: mkEval took 10.5021ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaAirflowPro\airflow\jobs\BigDataProjDeltaScala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.2783 ms
[info] loading settings for project bigdataprojdeltascala-build from plugins.sbt ...
[debug]               Load.resolveProject(bigdataprojdeltascala-build) took 100.6311ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bigdataprojdeltascala-build, base: D:\ScalaAirflowPro\airflow\jobs\BigDataProjDeltaScala\project, plugins: List(<none>))) took 155.9866ms
[debug] [Loading] Done in D:\ScalaAirflowPro\airflow\jobs\BigDataProjDeltaScala\project, returning: (bigdataprojdeltascala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1127.8864ms
[debug]           Load.loadUnit: cleanEvalClasses took 47.879ms
[debug]         Load.loadUnit(file:/D:/ScalaAirflowPro/airflow/jobs/BigDataProjDeltaScala/project/, ...) took 1377.8928ms
[debug]       Load.apply: load took 2148.4276ms
[debug]       Load.apply: resolveProjects took 6.5154ms
[debug]       Load.apply: finalTransforms took 97.9352ms
[debug]       Load.apply: config.delegates took 14.0947ms
[debug]       Load.apply: Def.make(settings)... took 711.0099ms
[debug]       Load.apply: structureIndex took 167.6653ms
[debug]       Load.apply: mkStreams took 2.4ms
[info] loading project definition from D:\ScalaAirflowPro\airflow\jobs\BigDataProjDeltaScala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
